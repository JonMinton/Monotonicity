summaries_rms  %>% mutate(avg=(u1+u2+difference)/3)  %>% arrange(avg)
summaries_rms  %>% mutate(avg=(u1+u2+difference)/3)  %>% arrange(avg)$method
summaries_rms  %>% mutate(avg=(u1+u2+difference)/3)  %>% arrange(avg)  %>% .$method
summaries_rms  %>% mutate(avg=(u1+u2+difference)/3)  %>% arrange(avg)  %>% levels
summaries_rms  %>% mutate(avg=(u1+u2+difference)/3)  %>% arrange(avg)  %>% levels  %>% as.factor
tmp
tmp <- summaries_rms %>%
mutate(avg=(u1+u2+difference)/3)  %>%
arrange(avg)
summaries_rms <- join(summaries_rms, tmp)
summaries_rms$method <- factor(summaries_rms$method,
levels=summaries_rms[order(summaries_rms$avg),"method"])
tmp %>%
ggplot(aes(x=value, y=method)) +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=method) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
summaries_rms
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=method) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
tmp %>%
ggplot(aes(x=value, y=method)) +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
tmp
tmp  %>% select(-avg)  %>% gather(key=variable, value=value, -method)
tmp  %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)  %>%
ggplot(aes(x=value, y=method)) +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
?reorder
head(tmp)
tmp
tmp$method <- factor(tmp$method)
tmp
tmp$method <- reorder(tmp$method, tmp$avg)
tmp
tmp  %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)  %>%
ggplot(aes(x=value, y=method)) +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=method) + geom_point(size=3)
tmp$method <- reorder(tmp$method, tmp$difference)
tmp  %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)  %>%
ggplot(aes(x=value, y=method)) +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=method) + geom_point(size=3)
tmp$method
order(tmp$avg)
orders <- order(tmp$avg)
tmp  %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)  %>%
ggplot(aes(x=value, y=method)) +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=order(method, orders) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
tmp  %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)  %>%
ggplot(aes(x=value, y=method)) +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=order(method, orders) + geom_point(size=3)
tmp  %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)  %>%
ggplot(aes(x=value, y=method)) +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=order(method, orders)) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
tmp <- summaries_rms %>%
gather(key=variable, value=value, -method)
# Want values reordered by mean rms error
levels(tmp$variable) <- c("Higher", "Lower", "Difference")
tmp <- summaries_rms %>%
mutate(avg=(u1+u2+difference)/3)  %>%
class(summaries_rms) <- "data.frame"
tmp <- summaries_rms %>%
gather(key=variable, value=value, -method)
class(summaries_rms) <- "data.frame"
tmp <- summaries_rms %>%
gather(key=variable, value=value, -method)
# Want values reordered by mean rms error
levels(tmp$variable) <- c("Higher", "Lower", "Difference")
summaries_rms
draws_nonboot <- draws_long %>%
tbl_df %>%
filter(method!="Bootstrapped") %>%
group_by(method, variable)
fn <- function(x){
values <- x$value
boot_values <- draws_boot  %>% filter(variable==x$variable[1])  %>% .$value
boot_quantiles <- quantile(boot_values, seq(from=0.025, 0.975, 0.05))
this_quantiles <- values %>%
quantile(probs=seq(from=0.025, 0.975, 0.05))
out <- (boot_quantiles - this_quantiles)  %>%
.^2 %>%
sum %>%
.^0.5
return(data.frame(rms=out))
}
summaries_rms <- draws_nonboot  %>%
do(fn(.))
summaries_rms <- summaries_rms %>%
spread(variable, rms)
class(summaries_rms) <- "data.frame"
tmp <- summaries_rms %>%
gather(key=variable, value=value, -method)
# Want values reordered by mean rms error
levels(tmp$variable) <- c("Higher", "Lower", "Difference")
tmp <- summaries_rms %>%
mutate(avg=(u1+u2+difference)/3)  %>%
arrange(avg)
tmp$method <- factor(tmp$method, levels=tmp[order(tmp$avg)], "method")
tmp$method <- factor(tmp$method, levels=tmp[order(tmp$avg), "method"])
tmp  %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)  %>%
ggplot(aes(x=value, y=method)) +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=method) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
g <- ggplot(data=summaries_rms) + aes(x=rms, y=method) + geom_point(size=3) +
facet_wrap( ~ variable) +
labs(x="Root mean squared error", y="Method")
print(g)
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=method) + geom_point(size=3) +
facet_wrap( ~ variable) +
labs(x="Root mean squared error", y="Method")
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
tmp  %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)  %>%
ggplot(aes(x=value, y=method)) +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
facet_wrap( ~ variable) +
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=method) + geom_point(size=3) +
labs(x="Root mean squared error", y="Method")
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
?geom_segment)
?geom_segment
tmp  %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)  %>%
ggplot(aes(x=value, y=method)) +
geom_segment(aes(x=0, xend=value, y=method, yend=method)) +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
tmp  %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)  %>%
ggplot(aes(x=value, y=method)) +
geom_segment(aes(x=0, xend=value, y=method, yend=method), style="dashed") +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
tmp  %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)  %>%
ggplot(aes(x=value, y=method)) +
geom_segment(aes(x=0, xend=value, y=method, yend=method), linetype="dashed") +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
tmp <- summaries_rms %>%
gather(key=variable, value=value, -method)
# Want values reordered by mean rms error
levels(tmp$variable) <- c("Higher", "Lower", "Difference")
tmp <- summaries_rms %>%
mutate(avg=(u1+u2+difference)/3)  %>%
arrange(avg)
tmp$method <- factor(tmp$method, levels=tmp[order(tmp$avg), "method"])
tmp  %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)  %>%
ggplot(aes(x=value, y=method)) +
geom_segment(aes(x=0, xend=value, y=method, yend=method), linetype="dashed") +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
tmp
tmp <- tmp %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)
head(tmp)
tmp <- summaries_rms %>%
gather(key=variable, value=value, -method)
# Want values reordered by mean rms error
tmp <- summaries_rms %>%
mutate(avg=(u1+u2+difference)/3)  %>%
arrange(avg)
tmp$method <- factor(tmp$method, levels=tmp[order(tmp$avg), "method"])
tmp <- tmp %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)
levels(tmp$variable) = c("Higher", "Lower", "Difference")
g <- tmp %>%
ggplot(aes(x=value, y=method)) +
geom_segment(aes(x=0, xend=value, y=method, yend=method), linetype="dashed") +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
tmp$variable <- factor(tmp$variable, levels=c("Higher", "Lower", "Difference"))
g <- tmp %>%
ggplot(aes(x=value, y=method)) +
geom_segment(aes(x=0, xend=value, y=method, yend=method), linetype="dashed") +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
tmp <- summaries_rms %>%
gather(key=variable, value=value, -method)
# Want values reordered by mean rms error
tmp <- summaries_rms %>%
mutate(avg=(u1+u2+difference)/3)  %>%
arrange(avg)
tmp$method <- factor(tmp$method, levels=tmp[order(tmp$avg), "method"])
tmp <- tmp %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)
tmp$variable <- factor(tmp$variable, levels=c("Higher", "Lower", "Difference"))
g <- tmp %>%
ggplot(aes(x=value, y=method)) +
geom_segment(aes(x=0, xend=value, y=method, yend=method), linetype="dashed") +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
tmp
print(g)
class(summaries_rms) <- "data.frame"
tmp <- summaries_rms %>%
gather(key=variable, value=value, -method)
# Want values reordered by mean rms error
tmp <- summaries_rms %>%
mutate(avg=(u1+u2+difference)/3)  %>%
arrange(avg)
tmp$method <- factor(tmp$method, levels=tmp[order(tmp$avg), "method"])
tmp <- tmp %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)
levels(tmp$variable) = c("Higher", "Lower", "Difference")
g <- tmp %>%
ggplot(aes(x=value, y=method)) +
geom_segment(aes(x=0, xend=value, y=method, yend=method), linetype="dashed") +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
print(g)
# New main script for Monotonicity analysis generation
# 29/5/2014
##### TO DO
# 1) Look again at calculation of covariance approaches
# Set up ------------------------------------------------------------------
rm(list=ls())
# Load prerequisites
source("scripts/LoadPackages.R")
RequiredPackages(
c(
"MASS",
"xlsx",
"ggplot2",
"reshape",
"gdata",
"devtools",
"plyr",
"tables",
"tidyr",
"dplyr"
)
)
source("scripts/functions.r")
N_PSA <- 10000
# Input Data --------------------------------------------------------------
data_2d <- data.frame(
u1=
c(0.736, 0.698, 0.756, 0.638, 0.646,
0.619, 0.800, 0.411, 0.664, 0.513,
0.594, 0.371, 0.608, 0.528, 0.823,
0.682, 0.462, 0.576, 0.572, 0.607,
0.542, 0.625, 0.694, 0.512, 0.591,
0.559, 0.588, 0.766, 0.551, 0.256
),
u2=
c(0.700, 0.625, 0.719, 0.594, 0.565,
0.565, 0.779, 0.363, 0.540, 0.500,
0.532, 0.300, 0.572, 0.420, 0.810,
0.650, 0.457, 0.517, 0.495, 0.561,
0.481, 0.610, 0.603, 0.463, 0.551,
0.450, 0.550, 0.647, 0.491, 0.150
)
)
fn <- function(x, n_dp=3){
mu <- x %>%
mean %>%
round(n_dp)
n_obs <- length(x)
upper_975 <- mean(x) + 1.96 * sd(x)/sqrt(n_obs)
se=((upper_975 - mean(x))/1.96) %>%
round(3)
out <- list(mu=mu, se=se)
return(out)
}
data_summaries <- data_2d %>%
apply(2, fn)
# Analyses ----------------------------------------------------------------
out <- llply(
1:12,
function(x) {create_draws(data_summaries, x, n_psa=N_PSA)}
)
out[[length(out)+1]] <-         data_2d  %>%
bootstrap_means_ipd(n_reps=N_PSA)
colnames(out[[length(out)]]) <- c("u1", "u2")
names(out) <-         c(
"Independent",                  "Quantile Matching",
"Replication\n(Upwards)",     "Replication\n(Downwards)",       "Resampling\n(Upwards)",
"Resampling\n(Downwards)",        "Resampling\n(Both)",           "AIVM",
"Covariance Fitting\n(Lower Bounded)",  "Covariance Fitting\n(Upper Bounded)",
"Difference\n(Upwards)",      "Difference\n(Downwards)", "Bootstrapped"
)
draws_df <- ldply(out) %>%
rename(method=.id) %>%
mutate(difference=u1-u2) %>%
filter(
method!="Covariance Fitting\n(Lower Bounded)" &
method!="Covariance Fitting\n(Upper Bounded)"
)
draws_df$method <- factor(draws_df$method,
levels=c("Bootstrapped", "Independent", "Resampling\n(Downwards)",
"Resampling\n(Upwards)", "Resampling\n(Both)", "Replication\n(Downwards)",
"Replication\n(Upwards)", "Quantile Matching", "AIVM",
"Difference\n(Downwards)", "Difference\n(Upwards)")
)
draws_long <- draws_df %>%
gather(key=variable, value=value, -method)
# Summaries ---------------------------------------------------------------
summaries_mean_sd <- draws_df %>%
group_by(method) %>%
summarise(
u1.mean=mean(u1),
u1.sd=sd(u1),
u2.mean=mean(u2),
u2.sd=sd(u2),
dif.mean=mean(difference),
dif.sd =sd(difference)
)
# Quantiles
draws_boot <- draws_long %>%tbl_df %>%
filter(method=="Bootstrapped")
draws_nonboot <- draws_long %>%
tbl_df %>%
filter(method!="Bootstrapped") %>%
group_by(method, variable)
fn <- function(x){
values <- x$value
boot_values <- draws_boot  %>% filter(variable==x$variable[1])  %>% .$value
boot_quantiles <- quantile(boot_values, seq(from=0.025, 0.975, 0.05))
this_quantiles <- values %>%
quantile(probs=seq(from=0.025, 0.975, 0.05))
out <- (boot_quantiles - this_quantiles)  %>%
.^2 %>%
sum %>%
.^0.5
return(data.frame(rms=out))
}
summaries_rms <- draws_nonboot  %>%
do(fn(.))
summaries_rms <- summaries_rms %>%
spread(variable, rms)
# #Compared with independent
# summaries_relative_rms <- cbind(
#     summaries_rms[,1],
#     apply(summaries_rms[,-1], 2, function(x) x/x[1])
#     )
#
# summaries_relative_rms <- summaries_relative_rms %>%
#     rowwise() %>%
#     mutate(average=mean(c(u1, u2, difference))) %>%
#     arrange(average)
#
#
# Figures -----------------------------------------------------------------
### Figures now
# Toy example:
tiff("figures/fig_01.tiff", 300,300)
toy_data <- data.frame(
bad=rnorm(10000, 0.05, 1.0),
good=rnorm(10000, 0.6, 0.4)
)
g <- ggplot(toy_data) +
geom_density(aes(x=bad), fill="red", alpha=0.6) +
geom_density(aes(x=good), fill="blue", alpha=0.2)
theme_myblank <- theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
g2 <- g + theme_myblank
print(g2)
dev.off()
# The IPD itself
tiff("figures/fig_02.tiff", 500, 500)
g <- ggplot(data=data_2d, aes(x=u1, y=u2)) +
geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=1.1) +
geom_point() +
xlab("Higher parameter") + ylab("Lower parameter") +
coord_fixed(xlim=c(0,1), ylim=c(0,1))
print(g)
dev.off()
tiff("figures/fig_03.tiff", 1100,1100)
g <- draws_df %>% tbl_df %>%
ggplot(aes(x=u1, y=u2)) +
geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=1.1) +
geom_point(alpha=0.1) + facet_wrap(~ method, nrow=3) +
coord_fixed(xlim=c(0.4, 0.7), ylim=c(0.4, 0.7)) +
xlab("Higher parameter") + ylab("Lower parameter") +
theme(text=element_text(size=16))
print(g)
dev.off()
tiff("figures/fig_04.tiff", 1200, 800)
g <- draws_df %>%
filter(method!="Bootstrapped") %>%
ggplot(aes(x=u1)) +
geom_density(fill="grey") +
facet_wrap("method", nrow=4) +
geom_density(aes(x=subset(draws_df, subset=method=="Bootstrapped")$u1), col="blue", width=1.1, lty="dashed") +
xlab("Distribution of estimates for higher parameter")
print(g)
dev.off()
# u2 : worse health state
tiff("figures/fig_05.tiff", 1200, 800)
g <- draws_df %>%
filter(method!="Bootstrapped") %>%
ggplot(aes(x=u2)) +
geom_density(fill="grey") +
facet_wrap("method", nrow=4) +
geom_density(aes(x=subset(draws_df, method=="Bootstrapped")$u2), col="blue", width=1.2, lty="dashed") +
xlab("Distribution of estimates for lower parameter")
print(g)
dev.off()
# difference
tiff("figures/fig_06.tiff", 1200, 800)
g <- draws_df %>%
filter(method!="Bootstrapped") %>%
ggplot(aes(x=difference)) +
geom_density(fill="grey") +
facet_wrap("method", nrow=4) +
geom_density(
aes(x=subset(draws_df, method=="Bootstrapped")$difference),
col="blue", width=1.2, lty="dashed",
trim=T
) +
xlab("Distribution of differences in paired estimates") +
coord_cartesian(ylim=c(0,100)) +
geom_vline(mapping=aes(x=0), colour="red")
print(g)
dev.off()
class(summaries_rms) <- "data.frame"
tmp <- summaries_rms %>%
gather(key=variable, value=value, -method)
# Want values reordered by mean rms error
tmp <- summaries_rms %>%
mutate(avg=(u1+u2+difference)/3)  %>%
arrange(avg)
tmp$method <- factor(tmp$method, levels=tmp[order(tmp$avg), "method"])
tmp <- tmp %>%
select(-avg)  %>%
gather(key=variable, value=value, -method)
levels(tmp$variable) = c("Higher", "Lower", "Difference")
tiff("figures/fig_07.tiff", 1200, 800)
g <- tmp %>%
ggplot(aes(x=value, y=method)) +
geom_segment(aes(x=0, xend=value, y=method, yend=method), linetype="dashed") +
geom_point(size=3) +
facet_wrap ( ~ variable) +
labs (x="Root mean squared error", y="Method")
print(g)
dev.off()
