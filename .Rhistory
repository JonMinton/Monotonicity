tiff("figures/fig_02.tiff", 500, 500)
g <- ggplot(data=data_2d, aes(x=u1, y=u2))
g2 <- g + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=1.1)
g3 <- g2 + geom_point()
g4 <- g3 + xlab("Higher parameter") + ylab("Lower parameter")
g5 <- g4 + coord_fixed(xlim=c(0,1), ylim=c(0,1))
print(g5)
dev.off()
g <- ggplot(data=subset(data_wide, subset=sample <=2000), aes(x=u1, y=u2))
g2 <- g + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=1.1)
g3 <- g2 + geom_point(alpha=0.1) + facet_wrap(~ method, nrow=3)
g4 <- g3 + coord_fixed(xlim=c(0.4, 0.7), ylim=c(0.4, 0.7))
g5 <- g4 + xlab("Higher parameter") + ylab("Lower parameter")
g6 <- g5 + theme(text=element_text(size=16))
print(g6)
levels(data_wide$method)
data_wide$method <- factor(
data_wide$method,
levels=c(
"Bootstrapped",
"Independent",
"Quantile Matching",
"Resampling\n(Downwards)"
"Resampling\n(Upwards)"
"Replication\n(Downwards)",
"Replication\n(Upwards)",
"Covariance Fitting\n(Lower Bounded)",
"Covariance Fitting\n(Upper Bounded)",
"Difference\n(Downwards)",
"Difference\n(Upwards)"
)
)
data_wide$method <- factor(
data_wide$method,
levels=c(
"Bootstrapped",
"Independent",
"Quantile Matching",
"Resampling\n(Downwards)",
"Resampling\n(Upwards)",
"Replication\n(Downwards)",
"Replication\n(Upwards)",
"Covariance Fitting\n(Lower Bounded)",
"Covariance Fitting\n(Upper Bounded)",
"Difference\n(Downwards)",
"Difference\n(Upwards)"
)
)
g <- ggplot(data=subset(data_wide, subset=sample <=2000), aes(x=u1, y=u2))
g2 <- g + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=1.1)
g3 <- g2 + geom_point(alpha=0.1) + facet_wrap(~ method, nrow=3)
g4 <- g3 + coord_fixed(xlim=c(0.4, 0.7), ylim=c(0.4, 0.7))
g5 <- g4 + xlab("Higher parameter") + ylab("Lower parameter")
g6 <- g5 + theme(text=element_text(size=16))
print(g6)
data_wide <- ldply(data_block)
data_wide$sample <- 1:N_PSA
data_wide <- rename(data_wide, c(".id"="method"))
data_wide <- mutate(data_wide, difference=u1-u2)
data_wide <- data_wide[c("method", "sample", "u1", "u2", "difference")]
head(data_wide)
table(data_wide$method)
data_wide <- ldply(data_block)
data_wide$sample <- 1:N_PSA
data_wide <- rename(data_wide, c(".id"="method"))
data_wide <- mutate(data_wide, difference=u1-u2)
data_wide <- data_wide[c("method", "sample", "u1", "u2", "difference")]
data_wide$method <- factor(
data_wide$method,
levels=c(
"Bootstrapped",
"Independent",
"Quantile Matching",
"Resampling\n(Downwards)",
"Resampling\n(Upwards)",
"Replication\n(Downwards)",
"Replication\n(Upwards)",
"AIVM",
"Covariance Fitting\n(Lower Bounded)",
"Covariance Fitting\n(Upper Bounded)",
"Difference\n(Downwards)",
"Difference\n(Upwards)"
)
)
data_long <- melt(data_wide, id.var=c("method", "sample"))
print("finished making wide and long data")
g <- ggplot(data=subset(data_wide, subset=sample <=2000), aes(x=u1, y=u2))
g2 <- g + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=1.1)
g3 <- g2 + geom_point(alpha=0.1) + facet_wrap(~ method, nrow=3)
g4 <- g3 + coord_fixed(xlim=c(0.4, 0.7), ylim=c(0.4, 0.7))
g5 <- g4 + xlab("Higher parameter") + ylab("Lower parameter")
g6 <- g5 + theme(text=element_text(size=16))
print(g6)
?sample
d_wide_ss <- data_wide[sample(nrow(data_wide), 2000),]
g <- ggplot(data=subset(d_wide_ss, aes(x=u1, y=u2))
g2 <- g + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=1.1)
g3 <- g2 + geom_point(alpha=0.1) + facet_wrap(~ method, nrow=3)
g4 <- g3 + coord_fixed(xlim=c(0.4, 0.7), ylim=c(0.4, 0.7))
d_wide_ss <- data_wide[sample(nrow(data_wide), 2000),]
g <- ggplot(data=d_wide_ss, aes(x=u1, y=u2))
g2 <- g + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=1.1)
g3 <- g2 + geom_point(alpha=0.1) + facet_wrap(~ method, nrow=3)
g4 <- g3 + coord_fixed(xlim=c(0.4, 0.7), ylim=c(0.4, 0.7))
g5 <- g4 + xlab("Higher parameter") + ylab("Lower parameter")
g6 <- g5 + theme(text=element_text(size=16))
print(g6)
?sample
sample(1:10, 5)
sample(1:10, 10)
d_wide_ss <- data_wide[sample(nrow(data_wide), min(2000, nrow(data_wide)),]
g <- ggplot(data=d_wide_ss, aes(x=u1, y=u2))
g2 <- g + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=1.1)
g3 <- g2 + geom_point(alpha=0.1) + facet_wrap(~ method, nrow=3)
g4 <- g3 + coord_fixed(xlim=c(0.4, 0.7), ylim=c(0.4, 0.7))
g5 <- g4 + xlab("Higher parameter") + ylab("Lower parameter")
g6 <- g5 + theme(text=element_text(size=16))
print(g6)
d_wide_ss
dim(d_wide_ss)
dim(data_wide)
head(data_wide)
samples <- sample(
unique(data_wide$sample),
min(2000, length(unique(data_wide$sample)))
)
samples <- sample(
unique(data_wide$sample),
min(2000, length(unique(data_wide$sample)))
)
d_wide_ss <- subset(data_wide, subset=sample %in% samples)
g <- ggplot(data=d_wide_ss, aes(x=u1, y=u2))
g2 <- g + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=1.1)
g3 <- g2 + geom_point(alpha=0.1) + facet_wrap(~ method, nrow=3)
g4 <- g3 + coord_fixed(xlim=c(0.4, 0.7), ylim=c(0.4, 0.7))
g5 <- g4 + xlab("Higher parameter") + ylab("Lower parameter")
g6 <- g5 + theme(text=element_text(size=16))
print(g6)
g <- ggplot(subset(data_wide, subset=method!="Bootstrapped"), aes(x=u1)) + geom_density(fill="grey")
g2 <- g + facet_wrap("method", nrow=4)
g3 <- g2 + geom_density(aes(x=subset(data_wide, subset=method=="Bootstrapped")$u1), col="blue", width=1.1, lty="dashed")
g4 <- g3 + xlab("Distribution of estimates for higher parameter")
print(g4)
g <- ggplot(subset(data_wide, method!="Bootstrapped"), aes(x=u2)) + geom_density(fill="grey")
g2 <- g + facet_wrap("method", nrow=4)
g3 <- g2 + geom_density(aes(x=subset(data_wide, method=="Bootstrapped")$u2), col="blue", width=1.2, lty="dashed")
g4 <- g3 + xlab("Distribution of estimates for lower parameter")
print(g4)
g <- ggplot(subset(data_wide, method!="Bootstrapped"), aes(x=difference)) + geom_density(fill="grey")
g2 <- g + facet_wrap("method", nrow=4)
g3 <- g2 + geom_density(
aes(x=subset(data_wide, method=="Bootstrapped")$difference),
col="blue", width=1.2, lty="dashed",
trim=T
)
g4 <- g3 + xlab("Distribution of differences in paired estimates")
g5 <- g4 + coord_cartesian(ylim=c(0,100))
g6 <- g5 + geom_vline(mapping=aes(x=0), colour="red")
print(g6)
levels(summaries_rms$var) <- c("Difference", "Higher", "Lower")
g1 <- ggplot(data=Summaries.RMS) + aes(y=method, x=value) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ var) + labs (x="Root mean squared error", y="Method")
print(g2)
g1 <- ggplot(data=Summaries.RMS) + aes(y=method, x=value) + geom_point(size=3)
g1 <- ggplot(data=summaries_rms) + aes(y=method, x=value) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ var) + labs (x="Root mean squared error", y="Method")
print(g2)
head(summaries_rms)
g1 <- ggplot(data=summaries_rms) + aes(y=method, x=rms) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ var) + labs (x="Root mean squared error", y="Method")
print(g2)
levels(summaries_rms$variable) <- c("Difference", "Higher", "Lower")
g1 <- ggplot(data=summaries_rms) + aes(y=method, x=rms) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
head(data_long)
boot_only <- subset(data_long, subset=method=="Bootstrapped")
head(boot_only)
boot_only <- subset(data_long, subset=method=="Bootstrapped")
boot_excluded <- subset(data_long, subset=method!="Bootstrapped")
fn <- function(x, boot_only=boot_only){
this_variable <- x$variable[1]
boot_values <- boot_only$value[boot_only$variable==this_variable]
boot_quantiles <- quantile(
boot_values,
seq(from=0.025, 0.975, 0.05)
)
this_quantiles <- quantile(
x$value,
seq(from=0.025, 0.975, 0.05)
)
out <- boot_quantiles - this_quantiles
out <- out^2
out <- sum(out)
out <- out^0.5
return(rms=out)
}
summaries_rms <- ddply(
data_excluded,
.(method, variable),
fn
)
summaries_rms <- ddply(
boot_excluded,
.(method, variable),
fn
)
fn <- function(x){
this_variable <- x$variable[1]
boot_values <- boot_only$value[boot_only$variable==this_variable]
boot_quantiles <- quantile(
boot_values,
seq(from=0.025, 0.975, 0.05)
)
this_quantiles <- quantile(
x$value,
seq(from=0.025, 0.975, 0.05)
)
out <- boot_quantiles - this_quantiles
out <- out^2
out <- sum(out)
out <- out^0.5
return(rms=out)
}
summaries_rms <- ddply(
boot_excluded,
.(method, variable),
fn
)
summaries_rms
?rename
summaries_rms <- rename(summaries_rms, "V1"="rms")
summaries_rms <- rename(summaries_rms, V1="rms")
summaries_rms <- rename(summaries_rms, replace=c("V1"="rms"))
head(summaries_rms)
levels(summaries_rms$variable)
levels(summaries_rms$variable) <- c("Higher", "Lower", "Difference")
g1 <- ggplot(data=summaries_rms) + aes(y=method, x=rms) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
# New main script for Monotonicity analysis generation
# 29/5/2014
##### TO DO
# 1) Look again at calculation of covariance approaches
##############################
rm (list=ls())
# Load prerequisites
source("scripts/LoadPackages.R")
RequiredPackages(
c(
"MASS",
"xlsx",
"ggplot2",
"reshape",
"gdata",
"devtools",
"plyr"
)
)
#######################################################################################################
######################### FUNCTIONS ###################################################################
#######################################################################################################
source("scripts/functions.r")
#######################################################################################################
######################### GLOBAL VARIABLES ############################################################
#######################################################################################################
# Global variables will be ALL UPPERCASE to distinguish them from other variables
N_PSA <- 10000
THROW_FACTS <- FALSE
if (THROW_FACTS) sponge <- c()
source("scripts/read_data.r")
source("scripts/make_sample_data.r")
source("scripts/make_summaries_dataframes.r")
source("scripts/Make_Figures.R")
?summaries_rms
head(summaries_rms)
rms_sum_wide <- recast(summaries_rms,
method ~ variable
)
head(summaries_rms)
head(rms_sum_wide)
mean_rms <- ddply(summaries_rms,
.(method),
mean_rms=mean(rms)
)
head(mean_rms)
mean_rms <- ddply(summaries_rms,
.(method),
summarise,
mean_rms=mean(rms)
)
head(mean_rms)
summaries_rms <- join(summaries_rms, mean_rms)
head(summaries_rms)
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=reorder(method, mean_rms)) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
mean_rms <- ddply(summaries_rms,
.(method),
summarise,
mean_rms=mean(rms)
dif_rms=rms[variable=="Difference"]
)
mean_rms <- ddply(summaries_rms,
.(method),
summarise,
mean_rms=mean(rms),
dif_rms=rms[variable=="Difference"]
)
head(mean_rms)
summaries_rms <- join(summaries_rms, mean_rms)
summaries_mean_sd <- ddply(
data_long,
.(method, variable),
summarise,
mean=mean(value),
sd=sd(value)
)
boot_only <- subset(data_long, subset=method=="Bootstrapped")
boot_excluded <- subset(data_long, subset=method!="Bootstrapped")
fn <- function(x){
this_variable <- x$variable[1]
boot_values <- boot_only$value[boot_only$variable==this_variable]
boot_quantiles <- quantile(
boot_values,
seq(from=0.025, 0.975, 0.05)
)
this_quantiles <- quantile(
x$value,
seq(from=0.025, 0.975, 0.05)
)
out <- boot_quantiles - this_quantiles
out <- out^2
out <- sum(out)
out <- out^0.5
return(rms=out)
}
summaries_rms <- ddply(
boot_excluded,
.(method, variable),
fn
)
summaries_rms <- rename(summaries_rms, replace=c("V1"="rms"))
# Want values reordered by mean rms error
levels(summaries_rms$variable) <- c("Higher", "Lower", "Difference")
mean_rms <- ddply(summaries_rms,
.(method),
summarise,
mean_rms=mean(rms),
dif_rms=rms[variable=="Difference"]
)
summaries_rms <- join(summaries_rms, mean_rms)
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=reorder(method, mean_rms)) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=reorder(method, dif_rms)) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=reorder(method, dif_rms)) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
?reorder
summaries_rms
head(summaries_rms)
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=reorder(method, dif_rms)) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=reorder(method, dif_rms)) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
summaries_rms
reorder(method, dif_rms)
reorder(summaries_rms$method, summaries$dif_rms)
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=reorder(method, summaries_rms$dif_rms)) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=reorder(summaries_rms$method, summaries_rms$dif_rms)) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
summaries_mean_sd <- ddply(
data_long,
.(method, variable),
summarise,
mean=mean(value),
sd=sd(value)
)
boot_only <- subset(data_long, subset=method=="Bootstrapped")
boot_excluded <- subset(data_long, subset=method!="Bootstrapped")
fn <- function(x){
this_variable <- x$variable[1]
boot_values <- boot_only$value[boot_only$variable==this_variable]
boot_quantiles <- quantile(
boot_values,
seq(from=0.025, 0.975, 0.05)
)
this_quantiles <- quantile(
x$value,
seq(from=0.025, 0.975, 0.05)
)
out <- boot_quantiles - this_quantiles
out <- out^2
out <- sum(out)
out <- out^0.5
return(rms=out)
}
summaries_rms <- ddply(
boot_excluded,
.(method, variable),
fn
)
summaries_rms <- rename(summaries_rms, replace=c("V1"="rms"))
summaries_rms
levels(summaries_rms$variable) <- c("Higher", "Lower", "Difference")
mean_rms <- ddply(summaries_rms,
.(method),
summarise,
mean_rms=mean(rms),
dif_rms=rms[variable=="Difference"]
)
summaries_rms <- join(summaries_rms, mean_rms)
summaries_rms
?reorder
InsectSprays
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=reorder(method, mean_rms)) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
summaries_rms
summaries_rms$method <- factor(summaries_rms$method,
levels=summaries_rms[order(summaries_rms$mean_rms),"method"])
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=method) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
tiff("figures/fig_07.tiff", 1200, 800)
g1 <- ggplot(data=summaries_rms) + aes(x=rms, y=method) + geom_point(size=3)
g2 <- g1 + facet_wrap(  ~ variable) + labs (x="Root mean squared error", y="Method")
print(g2)
dev.off()
# Toy example:
tiff("figures/fig_01.tiff", 300,300)
toy_data <- data.frame(
bad=rnorm(10000, 0.20, 1.0),
good=rnorm(10000, 0.6, 0.4)
)
g <- ggplot(toy_data) + geom_density(aes(x=bad), fill="red", alpha=0.2) + geom_density(aes(x=good), fill="blue", alpha=0.2)
theme_myblank <- theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
g2 <- g + theme_myblank
print(g2)
dev.off()
# The IPD itself
tiff("figures/fig_02.tiff", 500, 500)
g <- ggplot(data=data_2d, aes(x=u1, y=u2))
g2 <- g + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=1.1)
g3 <- g2 + geom_point()
g4 <- g3 + xlab("Higher parameter") + ylab("Lower parameter")
g5 <- g4 + coord_fixed(xlim=c(0,1), ylim=c(0,1))
print(g5)
dev.off()
#####
tiff("figures/fig_03.tiff", 1100,1100)
samples <- sample(
unique(data_wide$sample),
min(2000, length(unique(data_wide$sample)))
)
d_wide_ss <- subset(data_wide, subset=sample %in% samples)
g <- ggplot(data=d_wide_ss, aes(x=u1, y=u2))
g2 <- g + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=1.1)
g3 <- g2 + geom_point(alpha=0.1) + facet_wrap(~ method, nrow=3)
g4 <- g3 + coord_fixed(xlim=c(0.4, 0.7), ylim=c(0.4, 0.7))
g5 <- g4 + xlab("Higher parameter") + ylab("Lower parameter")
g6 <- g5 + theme(text=element_text(size=16))
print(g6)
dev.off()
tiff("figures/fig_04.tiff", 1200, 800)
g <- ggplot(subset(data_wide, subset=method!="Bootstrapped"), aes(x=u1)) + geom_density(fill="grey")
g2 <- g + facet_wrap("method", nrow=4)
g3 <- g2 + geom_density(aes(x=subset(data_wide, subset=method=="Bootstrapped")$u1), col="blue", width=1.1, lty="dashed")
g4 <- g3 + xlab("Distribution of estimates for higher parameter")
print(g4)
dev.off()
# u2 : worse health state
tiff("figures/fig_05.tiff", 1200, 800)
g <- ggplot(subset(data_wide, method!="Bootstrapped"), aes(x=u2)) + geom_density(fill="grey")
g2 <- g + facet_wrap("method", nrow=4)
g3 <- g2 + geom_density(aes(x=subset(data_wide, method=="Bootstrapped")$u2), col="blue", width=1.2, lty="dashed")
g4 <- g3 + xlab("Distribution of estimates for lower parameter")
print(g4)
dev.off()
# difference
tiff("figures/fig_06.tiff", 1200, 800)
g <- ggplot(subset(data_wide, method!="Bootstrapped"), aes(x=difference)) + geom_density(fill="grey")
g2 <- g + facet_wrap("method", nrow=4)
g3 <- g2 + geom_density(
aes(x=subset(data_wide, method=="Bootstrapped")$difference),
col="blue", width=1.2, lty="dashed",
trim=T
)
g4 <- g3 + xlab("Distribution of differences in paired estimates")
g5 <- g4 + coord_cartesian(ylim=c(0,100))
g6 <- g5 + geom_vline(mapping=aes(x=0), colour="red")
print(g6)
dev.off()
