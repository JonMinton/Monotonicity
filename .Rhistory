# 29/5/2014
rm (list=ls())
# Stages:
# Load prerequisites
require(MASS)
require(xlsx)
require(ggplot2)
require(reshape)
# Load data
source("Scripts/Read_Data.R")
# Load functions
source("Scripts/Functions.R")
# Stage global variables (e.g. N.psa)
n.psa <- 1000
# Check bootstrap IPD
Bi.Boot <- Bootstrap_Means_IPD(
Data.2D,
n.reps=n.psa
)
# Check Summarise_IPD
data.sum <- Summarise_IPD(Data.2D)
# Check method 1
Bi.M01 <- Create_Draws(
Sum_Data=data.sum,
method=1
)
# Check method 2
Bi.M02 <- Create_Draws(
Sum_Data=data.sum,
method=2
)
# Check method 3
Bi.M03 <- Create_Draws(
Sum_Data=data.sum,
method=3
)
# Check method 4
Bi.M04 <- Create_Draws(
Sum_Data=data.sum,
method=4
)
# Check method 5
Bi.M05 <- Create_Draws(
Sum_Data=data.sum,
method=5
)
# Check method 6
Bi.M06 <- Create_Draws(
Sum_Data=data.sum,
method=6
)
# Check method 7
Bi.M07 <- Create_Draws(
Sum_Data=data.sum,
method=7
)
# Check method 8
Bi.M08 <- Create_Draws(
Sum_Data=data.sum,
method=8
)
# Check method 9
Bi.M09 <- Create_Draws(
Sum_Data=data.sum,
method=9
)
# Check method 10
Bi.M10u <- Create_Draws(
Sum_Data=data.sum,
method=10,
direction="up"
)
Bi.M10d <- Create_Draws(
Sum_Data=data.sum,
method=10,
direction="down"
)
# Combine all estimates into a single long dataframe
Data_Wide <- data.frame(
method=c(),
variable=c(),
value=c()
)
tmp <- reshape::melt(
data.frame(Bi.M01),
measure.vars=c("U1", "U2")
)
##################
tmp <- data.frame(method="Ind", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
###############
tmp <- reshape::melt(
data.frame(Bi.M02),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="Quant Match", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
##############
tmp <- reshape::melt(
data.frame(Bi.M02),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="Quant Match", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
##############
tmp <- reshape::melt(
data.frame(Bi.M03),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="Rep Up", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
#############
tmp <- reshape::melt(
data.frame(Bi.M04),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="Rep down", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
#############
tmp <- reshape::melt(
data.frame(Bi.M05),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="Resamp Up", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
#############
tmp <- reshape::melt(
data.frame(Bi.M06),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="Resamp Down", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
#############
tmp <- reshape::melt(
data.frame(Bi.M07),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="AIVM", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
#############
tmp <- reshape::melt(
data.frame(Bi.M08),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="LB", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
tmp <- reshape::melt(
data.frame(Bi.M09),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="UB", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
tmp <- reshape::melt(
data.frame(Bi.M10),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="Diff Up", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
tmp <- reshape::melt(
data.frame(Bi.M10d),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="Diff Down", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
# New main script for Monotonicity analysis generation
# 29/5/2014
rm (list=ls())
# Stages:
# Load prerequisites
require(MASS)
require(xlsx)
require(ggplot2)
require(reshape)
# Load data
source("Scripts/Read_Data.R")
# Load functions
source("Scripts/Functions.R")
# Stage global variables (e.g. N.psa)
n.psa <- 1000
# Check bootstrap IPD
Bi.Boot <- Bootstrap_Means_IPD(
Data.2D,
n.reps=n.psa
)
# Check Summarise_IPD
data.sum <- Summarise_IPD(Data.2D)
# Check method 1
Bi.M01 <- Create_Draws(
Sum_Data=data.sum,
method=1
)
# Check method 2
Bi.M02 <- Create_Draws(
Sum_Data=data.sum,
method=2
)
# Check method 3
Bi.M03 <- Create_Draws(
Sum_Data=data.sum,
method=3
)
# Check method 4
Bi.M04 <- Create_Draws(
Sum_Data=data.sum,
method=4
)
# Check method 5
Bi.M05 <- Create_Draws(
Sum_Data=data.sum,
method=5
)
# Check method 6
Bi.M06 <- Create_Draws(
Sum_Data=data.sum,
method=6
)
# Check method 7
Bi.M07 <- Create_Draws(
Sum_Data=data.sum,
method=7
)
# Check method 8
Bi.M08 <- Create_Draws(
Sum_Data=data.sum,
method=8
)
# Check method 9
Bi.M09 <- Create_Draws(
Sum_Data=data.sum,
method=9
)
# Check method 10
Bi.M10u <- Create_Draws(
Sum_Data=data.sum,
method=10,
direction="up"
)
Bi.M10d <- Create_Draws(
Sum_Data=data.sum,
method=10,
direction="down"
)
# Combine all estimates into a single long dataframe
Data_Wide <- data.frame(
method=c(),
variable=c(),
value=c()
)
tmp <- reshape::melt(
data.frame(Bi.M01),
measure.vars=c("U1", "U2")
)
##################
tmp <- data.frame(method="Ind", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
###############
tmp <- reshape::melt(
data.frame(Bi.M02),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="Quant Match", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
##############
tmp <- reshape::melt(
data.frame(Bi.M03),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="Rep Up", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
#############
tmp <- reshape::melt(
data.frame(Bi.M04),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="Rep down", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
#############
tmp <- reshape::melt(
data.frame(Bi.M05),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="Resamp Up", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
#############
tmp <- reshape::melt(
data.frame(Bi.M06),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="Resamp Down", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
#############
tmp <- reshape::melt(
data.frame(Bi.M07),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="AIVM", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
#############
tmp <- reshape::melt(
data.frame(Bi.M08),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="LB", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
tmp <- reshape::melt(
data.frame(Bi.M09),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="UB", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
####################
tmp <- reshape::melt(
data.frame(Bi.M10),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="Diff Up", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
#############
tmp <- reshape::melt(
data.frame(Bi.M10d),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="Diff Down", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
tmp <- reshape::melt(
data.frame(Bi.Boot),
measure.vars=c("U1", "U2")
)
tmp <- data.frame(method="Boot", tmp)
Data_Wide <- rbind(
Data_Wide,
tmp
)
dim(Data_Wide)
head(data_Wide)
head(Data_Wide)
# New main script for Monotonicity analysis generation
# 29/5/2014
rm (list=ls())
# Stages:
# Load prerequisites
require(MASS)
require(xlsx)
require(ggplot2)
require(reshape)
# Load data
source("Scripts/Read_Data.R")
# Load functions
source("Scripts/Functions.R")
# Stage global variables (e.g. N.psa)
n.psa <- 1000
# Check bootstrap IPD
Data_Long <- Make_Long(
Data.2D
)
# New main script for Monotonicity analysis generation
# 29/5/2014
rm (list=ls())
# Stages:
# Load prerequisites
require(MASS)
require(xlsx)
require(ggplot2)
require(reshape)
# Load data
source("Scripts/Read_Data.R")
# Load functions
source("Scripts/Functions.R")
# Stage global variables (e.g. N.psa)
n.psa <- 1000
# Check bootstrap IPD
Data_Long <- Make_Long(
Data.2D
)
View(Data_Long)
Data_Wide <- reshape::dcast(Data_Long, method ~ variable)
Data_Wide <- reshape2::dcast(Data_Long, method ~ variable)
head(Data_wide)
head(Data_Wide)
Data_Wide <- reshape2::dcast(Data_Long, method ~ variable, fun.aggregate=mean)
head(Data_Wide)
Data_Wide <- reshape2::dcast(Data_Long, method ~ variable, fun.aggregate=sd)
head(Data_Wide)
Data_Wide <- reshape2::cast(Data_Long, method ~ variable)
Data_Wide <- cast(Data_Long, method ~ variable)
?cast
?acast
head(Data_Wide)
Data_Wide
head(Data_Long)
?reshape
Data_Wide2 <- reshape(Data_Long, direction="wide", idvar="method")
Data_Wide2 <- reshape(Data_Long, direction="wide", idvar="method", v.names="variable")
Data_Wide <- recast(Data_Long, measure="variable")
?recast
Data_Wide <- recast(Data_Long, method ~ variable, measure="variable")
Data_Wide <- recast(Data_Long, method ~ variable, measure="variable", fun.aggregate=NULL)
Data_Wide <- unstack(Data_Long, value ~ variable)
head(Data_Wide)
Data_Wide <- unstack(Data_Long, method + value ~ variable)
head(Data_Wide)
Data_Wide <- unstack(Data_Long, value ~ variable + method)
dim(Data_Wide)
dim(Data_Long)
Data_Wide <- unstack(Data_Long, value ~ variable)
dim(Data_Wide)
head(Data_Long[,1])
Data_Wide <- unstack(Data_Long, value ~ variable, select="method")
head(Data_Wide)
tmp Data_Long$method[1:length(Data_Long$method) %% 2]
tmp Data_Long$method[1:length(Data_Long$method) %/% 2]
tmp <- Data_Long$method[1:length(Data_Long$method) %/% 2]
length(tmp)
tmp <- Data_Long$method[1:length(Data_Long$method) %% 2]
length(tmp)
Data_Wide <- unstack(
Data_Long,
value ~ variable
)
tmp <- Data_Long$method[1:length(Data_Long$method) %%2] # Every other variable
head(tmp)
Data_Wide <- unstack(
Data_Long,
value ~ variable
)
tmp <- Data_Long$method[1:length(Data_Long$method) %%2] # Every other variable
Data_Wide <- data.frame(
method=tmp,
Data_Wide
)
rm(tmp)
?ggplot
g <- ggplot(data=Data_Wide, aes(x=U2, y=U1))
g
g + geom_scatter()
g + geom_point()
g + geom_point() + facet_wrap(method)
g + geom_point() + facet_wrap("method")
head(Data_Wide)
g + geom_point() + facet_wrap(~ method)
View(Data_Long)
tail(Data_Wide)
tail(Data_Long)
