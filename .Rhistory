.(method, variable),
rmsdif
)
x
SS <- subset(S, subset=method!="Bootstrapped")
SB <- subset(S, subset=method=="Bootstrapped")
SS <- SS[SS$result_variable !="mean" & SS$result_variable!="sd",]
SB <- SB[SB$result_variable !="mean" & SS$result_varibale!="sd",]
rmsdif <- function(x){
out <- x$value - SB$value
out <- out ^2
out <- mean(out)
out <- out ^0.5
return(out)
}
debug(rmsdif)
Out <- ddply(
SS,
.(method, variable),
rmsdif
)
out
x
out
out
out
out
out
out
x$value
SB$value
SS <- subset(S, subset=method!="Bootstrapped")
SB <- subset(S, subset=method=="Bootstrapped")
SS <- SS[SS$result_variable !="mean" & SS$result_variable!="sd",]
SB <- SB[SB$result_variable !="mean" & SS$result_variable!="sd",]
rmsdif <- function(x){
out <- x$value - SB$value
out <- out ^2
out <- mean(out)
out <- out ^0.5
return(out)
}
debug(rmsdif)
Out <- ddply(
SS,
.(method, variable),
rmsdif
)
out
x
SB
SB <- subset(S, subset=method=="Bootstrapped")
SB
SB <- subset(S, subset=method=="Bootstrapped")
dim(SB)
head(SB)
SS <- SS[SS$result_variable !="mean" & SS$result_variable!="sd",]
SB <- SB[SB$result_variable !="mean" & SS$result_variable!="sd",]
head(SB)
head(SS)
SS <- subset(S, subset=method!="Bootstrapped")SB <- subset(S, subset=method=="Bootstrapped")
SS <- SS[SS$result_variable !="mean" & SS$result_variable!="sd",]
SS <- subset(S, subset=method!="Bootstrapped")
SB <- subset(S, subset=method=="Bootstrapped")
SS <- SS[SS$result_variable !="mean" & SS$result_variable!="sd",]
SB <- SB[SB$result_variable !="mean" & SB$result_variable!="sd",]
rmsdif <- function(x){
out <- x$value - SB$value
out <- out ^2
out <- mean(out)
out <- out ^0.5
return(out)
}
debug(rmsdif)
Out <- ddply(
SS,
.(method, variable),
rmsdif
)
C
SS <- subset(S, subset=method!="Bootstrapped")
SB <- subset(S, subset=method=="Bootstrapped")
SS <- SS[SS$result_variable !="mean" & SS$result_variable!="sd",]
SB <- SB[SB$result_variable !="mean" & SB$result_variable!="sd",]
rmsdif <- function(x){
out <- x$value - SB$value
out <- out ^2
out <- mean(out)
out <- out ^0.5
return(out)
}
#debug(rmsdif)
Out <- ddply(
SS,
.(method, variable),
rmsdif
)
Out
Out2 <- ddply(
subset(SS, method!="Independent"),
(.method),
V1/subset(SS, method=="Independent")$V1
)
Out2 <- ddply(
subset(SS, method!="Independent"),
V1/subset(SS, method=="Independent")$V1
.(method),
)
Out2 <- ddply(
subset(SS, method!="Independent"),
.(method),
function(x ) x$V1/subset(SS, method=="Independent")$V1
)
Out2 <- ddply(
subset(SS, subset=method!="Independent"),
.(method),
function(x ) x$V1/subset(SS, subset=method=="Independent")$V1
)
f2  <- function(x){
out <- x$V1
tmp <- subset(SS, subset=method=="Independent")$V1
out <- out / tmp
return(out)
}
debug(f2)
Out2 <- ddply(
subset(SS, subset=method!="Independent"),
.(method),
f2
)
x
tmp
f2  <- function(x){
out <- x$value
tmp <- subset(SS, subset=method=="Independent")$value
out <- out / tmp
return(out)
}
debug(f2)
Out2 <- ddply(
subset(SS, subset=method!="Independent"),
.(method),
f2
)
Out2
Out2 <- ddply(
subset(SS, subset=method!="Independent"),
.(method),
f2
)
undebug(f2)
Out2 <- ddply(
subset(SS, subset=method!="Independent"),
.(method),
f2
)
Out2
head(Out)
paste(Out$method, "_" Out$variable)
paste(Out$method, "_", Out$variable)
rm (list=ls())
# Stages:
# Load prerequisites
require(MASS)
require(xlsx)
require(ggplot2)
require(reshape)
require(gdata)
# Load functions
source("Scripts/Functions.R")
installXLSXSupport()
installXLXSsupport()
installXLSXsupport()
rm (list=ls())
# Stages:
# Load prerequisites
require(MASS)
require(xlsx)
require(reshape)
require(gdata)
require(ggplot2)
# Load functions
source("Scripts/Functions.R")
# Stage global variables (e.g. N.psa)
n.psa <- 100000
# Check bootstrap IPD
source("Scripts/Manage_Data.R")
Summaries <- cast(
Data_Long,
method ~ variable,
function(x) c(mean=mean(x), sd=sd(x), quantile(x, seq(from=0.025, to=0.975, by=0.05)))
)
head(Summaries)
S <- melt(Summaries, id.vars="method")
head(S)
S2 <- dlply(S, variable, function(x) x)
S2 <- dlply(S, .(variable), function(x) x)
S2
str(S2)
S2 <- dlply(S, .(variable))
S2
?llply
S.boot <- llply(S2, function(x) {
isBoot <- which(x$method=="Bootstrapped")
D1 <- x[isBoot,]
D2 <- x[-isBoot,]
out <- list(boot=D1, other=D2)
return(out)
})
head(S.boot)
str(S.boot)
?grep
f1 <- function(x) {
isBoot <- which(x$method=="Bootstrapped")
D1 <- x[isBoot,]
D2 <- x[-isBoot,]
out <- list(boot=D1, other=D2)
return(out)
}
f2 <- function(x) {
isQuant <- grep("[[:digit:]]", x$method)
D1 <- x[isQuant,]
D2 <- x[-isQuant,]
out <- list(quant=D1, other=D2)
return(out)
}
S.boot <- llply(S2, .(f1, f2))
traceback()
S.boot <- llply(llply(S2, f1), f2)
x$method
S.boot <- llply(S2, f1)
f2 <- function(x){
boot <- x$boot
other <- x$other
}
debug(f2)
S.boot <- llply(S2, f1)
S.outcome <- ldply(
S.boot,
f2
)
head(boot)
head(other)
rm (list=ls())
# Stages:
# Load prerequisites
require(MASS)
require(xlsx)
require(ggplot2)
require(reshape)
require(gdata)
# Load functions
source("Scripts/Functions.R")
# Stage global variables (e.g. N.psa)
n.psa <- 100000
# Check bootstrap IPD
source("Scripts/Manage_Data.R")
Summaries <- cast(
Data_Long,
method ~ variable,
function(x) c(mean=mean(x), sd=sd(x), quantile(x, seq(from=0.025, to=0.975, by=0.05)))
)
Summaries.MeanSD <- cast(
Data_Long,
method ~ variable,
function(x) c(mean=mean(x), sd=sd(x))
)
Summaries.Quantiles <- cast(
Data_Long,
method ~ variable,
quantile,
seq(from=0.025, to=0.975, by=0.05)
)
head(Summaries.Quantiles)
Summaries.Difs <- cbind(
Summaries.Quantiles[,1],
Summaries.Quantiles[-1,-1] - Summaries.Quantiles[1,-1]
)
Summaries.Difs <- cbind(
Summaries.Quantiles[-1,1],
Summaries.Quantiles[-1,-1] - Summaries.Quantiles[1,-1]
)
Summaries.Quantiles[-1,1]
Summaries.Quantiles[-1,-1]
Summaries.Difs <- cbind(
Summaries.Quantiles[-1,1],
adply(Summaries.Quantiles[-1,-1],1, function(x) (x - Summaries.Quantiles[1,-1]))
)
Summaries.Difs
Summaries.Difs <- cbind(
Summaries.Quantiles[-1,1],
adply(Summaries.Quantiles[-1,-1],1, function(x) ((x - Summaries.Quantiles[1,-1])^2))
)
Summaries.Difs
tmp <- adply(Summaries.Difs[,-1], 1, mean)
warnings()
names(Summaries.Difs)[1] <- "method"
Summaries.Difs.Long <- melt(Summaries.Difs, id.var="method")
head(Summaries.Difs.Long)
?col_split
?mutate
Summaries.Difs.Long <- mutate(Summaries.Difs.Long, colsplit(variable, "_", c("var", "quantile")))
head(Summaries.Difs.Long)
?colsplit
Summaries.Difs.Long <- mutate(Summaries.Difs.Long, colsplit(Summaries.Difs.Long$variable, "_", c("var", "quantile")))
head(Summaries.Difs.Long)
head(colsplit(Summaries.Difs.Long$variable, "_", c("var", "quantile")))
Summaries.Difs.Long <- cbind(Summaries.Difs.Long, colsplit(Sum, "_", c("var", "quantile")))
Summaries.Difs.Long <- cbind(Summaries.Difs.Long, colsplit(Summaries.Difs.Long$variable, "_", c("var", "quantile")))
head(Summaries.Difs.Long)
Summaries.Difs.Long <- gdata::remove.vars(Summaries.Difs.Long, "variable")
head(Summaries.Difs.Long)
dlply(Summaries.Difs.Long, .(method, var), function(x) (mean(x))^0.5)
dlply(Summaries.Difs.Long, .(method, var), function(x) (mean(x$value))^0.5)
ddply(Summaries.Difs.Long, .(method, var), function(x) (mean(x$value))^0.5)
ddply(Summaries.Difs.Long, .(method, var), function(x) (rms=mean(x$value))^0.5)
?summarise
attach(Summaries.Difs.Long)
Summaries.Difs.Long <- Summaries.Difs.Long[order(var, method),]
detach(Summaries.Difs.Long)
Summaries.Difs.Long
Summaries.RMS <- ddply(Summaries.Difs.Long, .(method, var),function(x) (rms=mean(x$value))^0.5)
names(Summaries.RMS)
Summaries.RMS <- ddply(Summaries.Difs.Long, .(method, var),function(x) (rms=mean(x$value))^0.5)
attach(Summaries.RMS)
Summaries.RMS <- Summaries.RMS[order(var, method),]
detach(Summaries.RMS)
Summaries.RMS)
Summaries.RMS
?rename.vars
Summaries.RMS <- rename.vars(Summaries.RMS, from="V1", to="value")
g <- ggplot(Summaries.RMS)
g2 <- g + aes(x=value, y=method, group=var)
g3 <- g2 + geom_bar()
g3
?qplot
qplot(x=value, y=method, data=Summaries.RMS, facets = . ~ var)
qplot(x=value, y=method, data=Summaries.RMS, facets = . ~ var) + geom_hline()
qplot(x=value, y=method, data=Summaries.RMS, facets = . ~ var) + geom_line()
qplot(x=value, y=method, data=Summaries.RMS, facets = . ~ var)
qplot(x=value, y=method, data=Summaries.RMS, facets = . ~ var) + geom_bar()
qplot(x=value, y=method, data=Summaries.RMS, facets = . ~ var)
qplot(x=value, y=method, data=Summaries.RMS, facets = . ~ var, geom="line")
qplot(x=value, y=method, data=Summaries.RMS, facets = . ~ var, geom="bar")
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~ var, geom="bar")
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~ var, geom="bin")
qplot(x=value, y=method, data=Summaries.RMS, facets = . ~ var, geom="linerange")
qplot(x=method, y=value, data=Summaries.RMS, facets = var ~ ., geom="bar")
qplot(x=method, y=value, data=Summaries.RMS, facets = var ~ ., geom="bar") + coord_flip()
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar") + coord_flip()
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var) + coord_flip() + geom_bar(width=0.2)
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar", ) + coord_flip() + geom_bar(width=0.2)
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar" ) + coord_flip() + geom_bar(width=0.2)
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar", width=0.3 ) + coord_flip()
?ggplot
qplot(aes(x=method, y=value), data=Summaries.RMS, facets = . ~  var) + coord_flip() + geom_bar(width=0.3)
qplot(aes(x=method, y=value), data=Summaries.RMS, facets = . ~  var) + coord_flip() + geom_bar()
qplot(aes(x=method, y=value), data=Summaries.RMS) + coord_flip() + geom_bar() + facets_wrap( ~ var)
qplot(aes(x=method, y=value), data=Summaries.RMS) + coord_flip() + geom_bar() + facet_wrap( ~ var)
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar" ) + coord_flip()
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar" ) + coord_flip()
g <- ggplot(data=Summaries.RMS)
g2 <- g + geom_bar(aes(x=method, group=value))
g2
g2 <- g + geom_bar(aes(x=value, group=method))
g2
g2 <- g + geom_bar(aes(y=value, group=method))
g2
g2 <- g + geom_bar(aes(x=value, y=method))
g2
g2 <- g + geom_bar(aes(x=value, group=method)) + facet_wrap(. ~ var)
g2
g2 <- g + geom_bar(aes(x=value, group=method)) + facet_wrap(var)
g2 <- g + geom_bar(aes(x=value, group=method)) + facet_wrap( ~ var)
g2
g2 <- g + geom_bar(aes(x=value, y=method)) + facet_wrap( ~ var)
g2
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar" ) + coord_flip()
g2 <- g + geom_bar(aes(x=value, y=method, stat="bin")) + facet_wrap()
g <- ggplot(data=Summaries.RMS)
g2 <- g + geom_bar(aes(x=value, y=method, stat="bin")) + facet_wrap()
g2 <- g + geom_bar(aes(x=value, y=method), stat="bin")) + facet_wrap()
g2 <- g + geom_bar(aes(x=value, y=method), stat="bin") + facet_wrap()
g2 <- g + geom_bar(aes(x=value, y=method), stat="bin") + facet_wrap( ~ var)
g2
g2 <- g + geom_bar(aes(x=value, y=method), stat="identity") + facet_wrap( ~ var)
g2
g <- ggplot(data=Summaries.RMS)
g2 <- g + geom_bar(aes(x=value, group=method), stat="identity") + facet_wrap( ~ var)
g2
g2 <- g + geom_bar(aes(x=value, group=method), stat="identity") + facet_wrap(var)
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar" ) + coord_flip()
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar" ) + coord_flip() + geom_bar(width=0.5)
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom=geom_bar(width=0.5)) + coord_flip()
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar") + coord_flip()
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar", fill="red")+ coord_flip()
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar", fill=red)+ coord_flip()
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar", fill=col="red")+ coord_flip()
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar", fill=col="red")+ coord_flip()
col <- "red"
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar", fill=col="red")+ coord_flip()
col <- "red"
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar", fill=col)+ coord_flip()
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar", width=0.4)+ coord_flip()
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar", size=0.4)+ coord_flip()
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar", lwd=2)+ coord_flip()
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar")+ coord_flip()
?geom_linerange
ggplot(data=Summaries.RMS, facets = . ~ var) + geom_linerange(x=method, ymax=value, ymin=0) + coord_flip)
ggplot(data=Summaries.RMS, facets = . ~ var) + geom_linerange(aes(x=method, ymax=value, ymin=0)) + coord_flip)
ggplot(data=Summaries.RMS, facets = . ~ var) + geom_linerange(aes(x=method, ymax=value, ymin=0)) + coord_flip())
ggplot(data=Summaries.RMS, facets = . ~ var) + geom_linerange(aes(x=method, ymax=value, ymin=0)) + coord_flip()
g1 <- ggplot(data=Summaries.RMS, facets = . ~ var) + geom_linerange(aes(x=method, ymax=value, ymin=0)) + coord_flip()
g1 <- ggplot(data=Summaries.RMS) + geom_linerange(aes(x=method, ymax=value, ymin=0)) + coord_flip()
g2 <- g1 + facet_wrap( . ~ var)
g2
g2 <- g1 + facet_wrap(  ~ var)
g2
g1 <- ggplot(data=Summaries.RMS) + geom_bar(aes(x=method, ymax=value, ymin=0)) + coord_flip()
g2 <- g1 + facet_wrap(  ~ var)
g2
g1 <- ggplot(data=Summaries.RMS) + geom_linerange(aes(x=method, ymax=value, ymin=0), size=2) + coord_flip()
g2 <- g1 + facet_wrap(  ~ var)
g2
g1 <- ggplot(data=Summaries.RMS) + geom_linerange(aes(x=method, ymax=value, ymin=0), size=1.2) + coord_flip()
g2 <- g1 + facet_wrap(  ~ var)
g2
names(Summaries.RMS)
g1 <- ggplot(data=Summaries.RMS) + geom_linerange(aes(x=method, ymax=value, ymin=0), size=1.2) + coord_flip()
g2 <- g1 + facet_wrap(  ~ var) + scale_x_reverse()
g2
g2
g1 <- ggplot(data=Summaries.RMS) + geom_linerange(aes(x=method, ymax=value, ymin=0), size=1.2) + coord_flip() + scale_x_reverse()
g2 <- g1 + facet_wrap(  ~ var)
g2
g1 <- ggplot(data=Summaries.RMS) + geom_linerange(aes(x=rev(method), ymax=value, ymin=0), size=1.2) + coord_flip()
g2 <- g1 + facet_wrap(  ~ var)
g2
levels(Summaries.RMS$method)
factor(Summaries.RMS$method) <- factor(Summaries.RMS$method,
levels=rev(levels(Summaries.RMS$method))
)
Summaries.RMS$method <- factor(Summaries.RMS$method,
levels=rev(levels(Summaries.RMS$method))
)
qplot(x=method, y=value, data=Summaries.RMS, facets = . ~  var, geom="bar")+ coord_flip()
g1 <- ggplot(data=Summaries.RMS) + geom_linerange(aes(x=method, ymax=value, ymin=0), size=1.2) + coord_flip()
g2 <- g1 + facet_wrap(  ~ var)
g2
source("scripts/LoadPackages.R")
# 29/5/2014
rm (list=ls())
# Stages:
# Load prerequisites
source("scripts/LoadPackages.R")
rm (list=ls())
# Stages:
# Load prerequisites
source("scripts/LoadPackages.R")
RequiredPackages(
c(
"MASS",
"xlsx",
"ggplot2",
"reshape",
"gdata"
)
)
RequiredPackages(
c(
"MASS",
"xlsx",
"ggplot2",
"reshape",
"gdata",
"rmarkdown"
)
)
# New main script for Monotonicity analysis generation
# 29/5/2014
rm (list=ls())
# Stages:
# Load prerequisites
source("scripts/LoadPackages.R")
RequiredPackages(
c(
"MASS",
"xlsx",
"ggplot2",
"reshape",
"gdata",
"rmarkdown"
)
)
install.packages("RMark")
devtools::install_github("rstudio/rmarkdown")
RequiredPackages(
c(
"MASS",
"xlsx",
"ggplot2",
"reshape",
"gdata",
"devtools"
)
)
str(installed.packages())
installed.packages()[,"Package"]
devtools::install_github("rstudio/rmarkdown")
version()
Sys.info()
sessionInfo()
