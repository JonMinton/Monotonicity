head(Data_Wide)
# New main script for Monotonicity analysis generation
# 29/5/2014
rm (list=ls())
# Stages:
# Load prerequisites
require(MASS)
require(xlsx)
require(ggplot2)
require(reshape)
# Load data
source("Scripts/Read_Data.R")
# Load functions
source("Scripts/Functions.R")
# Stage global variables (e.g. N.psa)
n.psa <- 1000
# Check bootstrap IPD
Data_Long <- Make_Long(
Data.2D
)
# New main script for Monotonicity analysis generation
# 29/5/2014
rm (list=ls())
# Stages:
# Load prerequisites
require(MASS)
require(xlsx)
require(ggplot2)
require(reshape)
# Load data
source("Scripts/Read_Data.R")
# Load functions
source("Scripts/Functions.R")
# Stage global variables (e.g. N.psa)
n.psa <- 1000
# Check bootstrap IPD
Data_Long <- Make_Long(
Data.2D
)
head(Data_Long)
D2 <- reshape2::recast(Data_Long, id.var=c("method", "sample"), formula=value ~ variable)
head(D2)
D2 <- reshape2::recast(Data_Long, id.var=c("method", "sample"), formula=variable~ value)
dim(D2)
examples(reshape2)
example(reshape2)
demo(reshape2)
demo(reshape)
names(airquality) <- tolower(names(airquality))
names(airquality)
head(airquality)
aqm <- melt(airquality, id=c("month", "day"), na.rm=TRUE)
head(aqm)
cast(aqm, day ~ month ~ variable)
head(aqm)
head(cast(aqm, day ~ month ~ variable))
head(cast(aqm, month~ variable, mean))
head(cast(aqm, month ~ . | variable, mean))
head(cast(aqm, month ~ variable, mean, margins=c("grand_row", "grand_col")))
cast(aqm, month ~ variable, mean, margins=c("grand_row", "grand_col"))
cast(aqm, day ~ month, mean, subset=variable=="ozone")
cast(aqm, month ~ variable, range)
cast(aqm, month ~ variable + result_variable, range)
head(Data_Long)
Data_Wide <- cast(Data_Long, method + sample ~ variable)
head(Data_Wide)
g <- ggplot(data=Data_Wide, aes(x=U2, y=U1))
g
g + geom_point()
g + geom_point() + facet_wrap(. ~ method)
g + geom_point() + facet_wrap(method)
g + geom_point() + facet_wrap("method")
g + geom_point() + facet_wrap("method") + geom_abline(intercept=0, slope=1)
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g + geom_point + facet_wrap("method") + geom_abline(intercept=0, slopw=1, colour="red")
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g + geom_point + facet_wrap("method") + geom_abline(intercept=0, slopw=1, colour="red")
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g + geom_point() + facet_wrap("method") + geom_abline(intercept=0, slopw=1, colour="red")
g + geom_point() + facet_wrap("method") + geom_abline(intercept=0, slopw=1, colour="red") -> g2
g + geom_point() + facet_wrap("method") + geom_abline(intercept=0, slope=1, colour="red") -> g2
g2
g2 + coord_cartesian(xlim=c(0,1), ylim=c(0,1))
g2 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7))
g + geom_point() + facet_wrap("method") + geom_abline(intercept=0, slope=1, colour="red", lty="dashed") -> g2
g2 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7))
# New main script for Monotonicity analysis generation
# 29/5/2014
rm (list=ls())
# Stages:
# Load prerequisites
require(MASS)
require(xlsx)
require(ggplot2)
require(reshape)
# Load data
source("Scripts/Read_Data.R")
# Load functions
source("Scripts/Functions.R")
# Stage global variables (e.g. N.psa)
n.psa <- 1000
# Check bootstrap IPD
Data_Long <- Make_Long(
Data.2D
)
Data_Wide <- cast(Data_Long, method + sample  ~ variable)
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g + geom_point() + facet_wrap("method") + geom_abline(intercept=0, slope=1, colour="red", lty="dashed") -> g2
g2 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7))
# New main script for Monotonicity analysis generation
# 29/5/2014
rm (list=ls())
# Stages:
# Load prerequisites
require(MASS)
require(xlsx)
require(ggplot2)
require(reshape)
# Load data
source("Scripts/Read_Data.R")
# Load functions
source("Scripts/Functions.R")
# Stage global variables (e.g. N.psa)
n.psa <- 1000
# Check bootstrap IPD
Data_Long <- Make_Long(
Data.2D
)
Data_Wide <- cast(Data_Long, method + sample  ~ variable)
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g + geom_point() + facet_wrap("method") + geom_abline(intercept=0, slope=1, colour="red", lty="dashed") -> g2
g2 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7))
# New main script for Monotonicity analysis generation
# 29/5/2014
rm (list=ls())
# Stages:
# Load prerequisites
require(MASS)
require(xlsx)
require(ggplot2)
require(reshape)
# Load data
source("Scripts/Read_Data.R")
# Load functions
source("Scripts/Functions.R")
# Stage global variables (e.g. N.psa)
n.psa <- 1000
# Check bootstrap IPD
Data_Long <- Make_Long(
Data.2D
)
Data_Wide <- cast(Data_Long, method + sample  ~ variable)
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g + geom_point() + facet_wrap("method") + geom_abline(intercept=0, slope=1, colour="red", lty="dashed") -> g2
g2 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7))
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g + geom_point() + facet_wrap("method") + geom_abline(intercept=0, slope=1, colour="red", lty="dashed") -> g2
g2 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7)) -> g3
g3 + coord_fixed()
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g2 <- g + geom_point() + facet_wrap("method")
g3 <- g2 + geom_abline(intercept=0, slope=1, colour="red", lty="dashed")
g4 <- g3 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7)) + coord_fixed()
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g2 <- g + geom_point() + facet_wrap("method")
g3 <- g2 + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", lwd=2)
g4 <- g3 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7)) + coord_fixed()
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g2 <- g + geom_point() + facet_wrap("method")
g3 <- g2 + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", width=2)
g4 <- g3 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7)) + coord_fixed()
g4
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g2 <- g + geom_point() + facet_wrap("method")
g3 <- g2 + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", lwd=2)
g4 <- g3 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7)) + coord_fixed()
g4
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g2 <- g + geom_point() + facet_wrap("method")
g3 <- g2 + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", lwd=1.2)
g4 <- g3 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7)) + coord_fixed()
g4
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g2 <- g + geom_point() + facet_wrap("method")
g3 <- g2 + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", lwd=1.1)
g4 <- g3 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7)) + coord_fixed()
g4
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g2 <- g + geom_point() + facet_wrap("method")
g3 <- g2 + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=2)
g4 <- g3 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7)) + coord_fixed()
g4
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g2 <- g + geom_point() + facet_wrap("method")
g3 <- g2 + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=4)
g4 <- g3 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7)) + coord_fixed()
g4
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g2 <- g + geom_point() + facet_wrap("method")
g3 <- g2 + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=1.1)
g4 <- g3 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7)) + coord_fixed()
g4
g4 + xlab("Worse health state") + ylab("Better health state")
Data_Wide <- data.frame(Data_Wide, difference=Data_Wide$U2 - Data_Wide$U1)
head(Data_Wide)
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g2 <- g + geom_point() + facet_wrap("method")
g3 <- g2 + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=1.1)
g4 <- g3 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7)) + coord_fixed()
g4 + xlab("Better health state") + ylab("Worse health state")
# New main script for Monotonicity analysis generation
# 29/5/2014
rm (list=ls())
# Stages:
# Load prerequisites
require(MASS)
require(xlsx)
require(ggplot2)
require(reshape)
# Load data
source("Scripts/Read_Data.R")
# Load functions
source("Scripts/Functions.R")
# Stage global variables (e.g. N.psa)
n.psa <- 1000
# Check bootstrap IPD
Data_Long <- Make_Long(
Data.2D
)
Data_Wide <- cast(Data_Long, method + sample  ~ variable)
g <- ggplot(data=Data_Wide, aes(x=U1, y=U2))
g2 <- g + geom_point() + facet_wrap("method")
g3 <- g2 + geom_abline(intercept=0, slope=1, colour="red", lty="dashed", size=1.1)
g4 <- g3 + coord_cartesian(xlim=c(0.45,0.7), ylim=c(0.45,0.7)) + coord_fixed()
g4 + xlab("Better health state") + ylab("Worse health state")
Data_Wide <- data.frame(Data_Wide, difference=Data_Wide$U1 - Data_Wide$U2)
g  <- ggplot(data=Data_Wide, aes(x=U1 | method)) + geom_density()
g
g  <- ggplot(data=Data_Wide, aes(x=U1)) + geom_density()
g
g  <- ggplot(data=Data_Wide, aes(x=U1)) + geom_density() + facet_wrap(method)
g  <- ggplot(data=Data_Wide, aes(x=U1)) + geom_density() + facet_wrap("method")
g
g  <- ggplot(data=Data_Wide, aes(x=U1)) + geom_density(fill="grey") + facet_wrap("method")
g
head(Data_Wide)
D2 <- melt(Data_Wide, id=c("method", "sample"))
head(D2)
g  <- ggplot(data=Data_Wide, aes(x=value)) + geom_density(fill="grey") + facet(method ~ variable)
g
g  <- ggplot(data=Data_Wide, aes(x=value)) + geom_density(fill="grey") + facet_grid(method ~ variable)
g
g  <- ggplot(data=Data_Wide, aes(value, ..density..)) + geom_density(fill="grey") + facet_grid(method ~ variable)
g
head(diamonds)
g <- ggplot(diamonds, x= price)
g + stat_density(aes(ymax= ..density.., ymin=-..density..))
g <- ggplot(diamonds, aes(x= price))
g + stat_density(aes(ymax= ..density.., ymin=-..density..))
g + stat_density(aes(ymax= ..density.., ymin=-..density..)) + facet_grid(. ~ cut)
g + stat_density(aes(ymax= ..density.., ymin=-..density..)) + facet_grid(cut ~ .)
g + stat_density(aes(ymax= ..density.., ymin=-..density..)) + facet_grid(cut ~ clarity)
g2 <- g + stat_density(ymax=..density.., ymin=-..density)
g2 <- g + stat_density(aes(ymax=..density.., ymin=-..density))
g  <- ggplot(data=Data_Wide, aes(x= value))
g2 <- g + stat_density(aes(ymax=..density.., ymin=-..density))
g3 <- g2 + facet_grid(method ~ variable)
g3
g3 <- g2 + facet_grid(method ~ .)
g3
g  <- ggplot(data=Data_Wide, aes(x= value))
g2 <- g + stat_density(aes(ymax=..density.., ymin=-..density..))
g3 <- g2 + facet_grid(method ~ .)
g3
g  <- ggplot(data=D2, aes(x= value))
g2 <- g + stat_density(aes(ymax=..density.., ymin=-..density..))
g3 <- g2 + facet_grid(method ~ .)
g3
g3 <- g2 + facet_grid(method ~ variable)
g3
g3 <- g2 + facet_grid(variable~ method)
g3
g2 <- g + stat_density(aes(ymax=100, ymin=0)
g3 <- g2 + facet_grid(variable~ method)
g2 <- g + stat_density(aes(ymax=100, ymin=0))
g3 <- g2 + facet_grid(variable~ method)
g3
g3 + ylim(c(0,100))
g <- ggplot(Data_Wide, aes(x=U1)) + geom_density(fill="grey")
g
g2 <- g + facet_wrap(. ~ method)
g2
g2 <- g + facet_wrap("method")
g2
g <- ggplot(subset(Data_Wide, method!="Bootstrapped"), aes(x=U1)) + geom_density(fill="grey")
g2 <- g + facet_wrap("method")
g2
g3 <- g2 + geom_density(aes(x=subset(Data_Wide, method=="Bootstrapped")$U1), col="blue")
g3
g3 <- g2 + geom_density(aes(x=subset(Data_Wide, method=="Bootstrapped")$U1), col="blue", width=1.1, lty="dashed")
g3
g3 <- g2 + geom_density(aes(x=subset(Data_Wide, method=="Bootstrapped")$U2), col="blue", width=1.2, lty="dashed")
g3
g <- ggplot(subset(Data_Wide, method!="Bootstrapped"), aes(x=U2)) + geom_density(fill="grey")
g2 <- g + facet_wrap("method")
g3 <- g2 + geom_density(aes(x=subset(Data_Wide, method=="Bootstrapped")$U2), col="blue", width=1.2, lty="dashed")
g3
g <- ggplot(subset(Data_Wide, method!="Bootstrapped"), aes(x=difference)) + geom_density(fill="grey")
g2 <- g + facet_wrap("method")
g3 <- g2 + geom_density(aes(x=subset(Data_Wide, method=="Bootstrapped")$difference), col="blue", width=1.2, lty="dashed")
g3
g3 + ylim(c(0, 100))
cast(Data_Wide, method ~ U1, function(x) quantile(c(0.025, 0.5, 0.975)))
names(Data_Wide)
cast(Data_Wide, method ~ U1 + U2 + difference, function(x) quantile(c(0.025, 0.5, 0.975)))
?casrt
?cast
cast(Data_Wide, . ~ U1 + U2 + difference, function(x) quantile(c(0.025, 0.5, 0.975)))
cast(Data_Wide, method ~ U1  + difference, length)
cast(Data_Wide, method ~ .  + difference, length)
cast(Data_Wide, method ~ . , length)
cast(Data_Wide, method ~ U1 , length)
cast(Data_Wide, method ~ U1 + U2, length)
cast(Data_Wide, method ~ . , length)
cast(Data_Long, method ~ variable , length)
head(D2)
cast(D2, method ~ variable)
cast(D2, method ~ variable, mean)
cast(D2, method ~ variable, function(x), mean)
cast(D2, method ~ variable, function(x) c(mean(x), sd(x)))
cast(D2, method ~ variable, function(x) c(mean=mean(x), sd=sd(x)))
cast(D2, method ~ variable, function(x) c(mean=mean(x), sd=sd(x), quantile(x, c(0.025, 0.5, 0.975))))
class(cast(D2, method ~ variable, function(x) c(mean=mean(x), sd=sd(x), quantile(x, c(0.025, 0.5, 0.975)))))
?dotplot
?piechart
C1 <- cast(D2, method ~ variable, function(x) c(mean=mean(x), sd=sd(x), quantile(x, c(0.025, 0.5, 0.975))))
ggplot(data= C1, aes(x=reorder(method, U1_X2.5.), y= Mean,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) +
geom_hline(aes(intercept= 0), linetype="dotted") +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
ggplot(data= C1, aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) +
geom_hline(aes(intercept= 0), linetype="dotted") +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
ggplot(data= C1, aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
ggplot(data= subset(C1, method!="Bootstrapped", aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
>
Q
ggplot(data= subset(C1, method!="Bootstrapped", aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
?geom_vline
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_vline(x=subset(X1, method="Bootstrapped")$U1_X2.5.) +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_vline(x=subset(C1, method="Bootstrapped")$U1_X2.5.) +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_vline(aes(x=subset(C1, method="Bootstrapped")$U1_X2.5.)) +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_vline(aes(x=subset(C1, method=="Bootstrapped")$U1_X2.5.)) +
coord_flip()
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_vline(x=subset(C1, method=="Bootstrapped")$U1_X2.5.) +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
subset(C1, method=="Bootstrapped")$U1_X2.5.
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(x=subset(C1, method=="Bootstrapped")$U1_X2.5.) +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(xintercept=subset(C1, method=="Bootstrapped")$U1_X2.5.) +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(aes(intercept=subset(C1, method=="Bootstrapped")$U1_X2.5.)) +
coord_flip()
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
subset(C1, method=="Bootstrapped")$U1_X2.5.
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(aes(intercept=subset(C1, method=="Bootstrapped")$U1_X2.5.)) +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_vline(aes(intercept=subset(C1, method=="Bootstrapped")$U1_X2.5.)) +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
?geom_hline
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_xline(aes(yintercept=subset(C1, method=="Bootstrapped")$U1_X2.5.)) +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U1_X2.5.)) +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")[,"U1_X2.5.", "U1_X97.5."]), lty="dashed") +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")[,c("U1_X2.5.", "U1_X97.5.")]), lty="dashed") +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U1_X2.5.), lty="dashed") +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip()
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U1_X2.5.), lty="dashed") +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip() + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U1_X97.5.), lty="dashed")
C1
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U1_X2.5.), lty="dashed") +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip() + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U1_X97.5.), lty="dashed") +
geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U1_X50.)
subset(C1, method=="Bootstrapped")$U1_X2.5.
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U1_X2.5.), y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U1_X2.5.), lty="dashed") +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip() + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U1_X97.5.), lty="dashed") +
geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U1_X50.))
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, U2_X2.5.), y= U2_X50.,
ymin=U2_X2.5., ymax=U2_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U2_X2.5.), lty="dashed") +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip() + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U2_X97.5.), lty="dashed") +
geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U2_X50.))
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=reorder(method, difference_X2.5.), y= difference_X50.,
ymin=difference_X2.5., ymax=difference_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$difference_X2.5.), lty="dashed") +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip() + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$difference_X97.5.), lty="dashed") +
geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$difference_X50.))
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=method, y= difference_X50.,
ymin=difference_X2.5., ymax=difference_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$difference_X2.5.), lty="dashed") +
xlab("Variable\n") + ylab("\n Coefficient Estimate") +
coord_flip() + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$difference_X97.5.), lty="dashed") +
geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$difference_X50.))
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=method, y= U1_X50.,
ymin=U1_X2.5., ymax=U1_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U1_X2.5.), lty="dashed") +
xlab("Method\n") + ylab("\n Quantile Range") +
coord_flip() + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U1_X97.5.), lty="dashed") +
geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U1_X50.))
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=method, y= U2_X50.,
ymin=U2_X2.5., ymax=U2_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U2_X2.5.), lty="dashed") +
xlab("Method\n") + ylab("\n Quantile Range") +
coord_flip() + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U2_X97.5.), lty="dashed") +
geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$U2_X50.))
ggplot(data= subset(C1, method!="Bootstrapped"), aes(x=method, y= difference_X50.,
ymin=difference_X2.5., ymax=difference_X97.5.)) +
geom_pointrange(size=1.4) + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$difference_X2.5.), lty="dashed") +
xlab("Method\n") + ylab("\n Quantile Range") +
coord_flip() + geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$difference_X97.5.), lty="dashed") +
geom_hline(aes(yintercept=subset(C1, method=="Bootstrapped")$difference_X50.))
# Figures
C1
round(C1, digits=2)
?round
C1 <- cast(D2, method ~ variable, function(x) c(mean=mean(x), sd=sd(x), quantile(x, seq(from=0.025, to=0.975, by=0.05))))
C1
C1 <- cast(D2, method ~ variable, function(x) round(c(mean=mean(x), sd=sd(x), quantile(x, seq(from=0.025, to=0.975, by=0.05))), digits=3))
C1
